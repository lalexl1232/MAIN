# -*- coding: utf-8 -*-
"""laba1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XSB3e-xFCywuJ1FiG5_Vrz6z7c824gZC
"""

import numpy as np 
import pandas as pd 
import seaborn as sns 
from sklearn.neighbors import KNeighborsClassifier 
 
data = pd.read_csv('credit_data.csv') 
data.head(12)

import pandas as pd 
data = data.dropna( how = "any")
data['default'] = data.default 
data[data.default == 1].head() 
data[data.default == 1].shape

sns.scatterplot(data=data, x=data['age'], y=data['loan'], hue=data.default.values)

sns.scatterplot(data=data, x=data['age'], y=data['income'], hue=data.default.values)

sns.scatterplot(data=data, x=data['loan'], y=data['income'], hue=data.default.values)

from sklearn.model_selection import train_test_split 
x_train, x_test, y_train, y_test = train_test_split(data[['income', 'age', 'loan']], data.default, 
                                                    test_size=0.2, 
                                                    random_state=3) 

print(x_train) 
print(y_train)

from sklearn.metrics import accuracy_score
import numpy as np
for k in range(1, 10, 2): 
  knn = KNeighborsClassifier(n_neighbors = k ) 
  knn.fit(x_train, y_train) 
  print(k, " :", accuracy_score(y_test, knn.predict(x_test)))

  ###перекресная проверка получилась более точно за меньшее чило перебора k###
# for k in range(1, 20, 2): 
#     knn = KNeighborsClassifier(n_neighbors = k )
#     from sklearn.model_selection import cross_val_score
#     cv_cross = cross_val_score(knn, x_test, y_test, cv =5)
#     print("k = ", k)
#     print(cv_cross)
#     print("cv score :{}".format(np.mean(cv_cross)))
#     print(" ")

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix
knn = KNeighborsClassifier(3) 
knn.fit(x_train, y_train) 
cm = confusion_matrix(y_test, knn.predict(x_test)) 

import matplotlib.pyplot as plt 
plt.figure(figsize=(10,8))
sns.heatmap(cm, annot=True)